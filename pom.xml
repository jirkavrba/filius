<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>filius</groupId>
	<artifactId>filius</artifactId>
	<version>1.5.4</version>
	<properties>
		<buildDate>08.12.2013</buildDate>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.10</junit.version>
		<mockito.version>1.9.0</mockito.version>
		<fest.version>1.4</fest.version>
		<htmlparser.version>1.6</htmlparser.version>
		<jna.version>3.0.9</jna.version>
		<mavenCompiler.version>2.0.2</mavenCompiler.version>
		<java.version>1.6</java.version>
		<execJre.version>1.6.0</execJre.version>
		<mavenJar.version>2.4</mavenJar.version>
		<launch4j.version>1.5.2</launch4j.version>
		<launch4j.starterName>Filius.exe</launch4j.starterName>
		<launch4j.setupStarterName>Filius-Setup-${project.version}.exe</launch4j.setupStarterName>
		<izpack.version>5.0.0-beta11</izpack.version>
		<izpack.staging>${project.build.directory}/izpack</izpack.staging>
		<izpack.appName>Filius</izpack.appName>
		<izpack.url>http://www.lernsoftware-filius.de</izpack.url>
		<izpack.installDir>Filius</izpack.installDir>
		<izpack.appVersion>${project.version}</izpack.appVersion>
	</properties>
	<packaging>jar</packaging>

	<name>Filius</name>
	<description>Lernsoftware zu Rechnernetzen</description>
	<url>http://www.lernsoftware-filius.de</url>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>${fest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.htmlparser</groupId>
			<artifactId>htmlparser</artifactId>
			<version>${htmlparser.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.jna</groupId>
			<artifactId>jna</artifactId>
			<version>${jna.version}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>filius</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${mavenCompiler.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${mavenJar.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>filius.Main</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>

		</plugins>
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<build>
				<plugins>

					<!-- Create Filius Executable for Windows -->
					<plugin>
						<groupId>com.akathist.maven.plugins.launch4j</groupId>
						<artifactId>launch4j-maven-plugin</artifactId>
						<version>${launch4j.version}</version>
						<executions>
							<execution>
								<id>filius-exe</id>
								<phase>package</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<outfile>target/${launch4j.starterName}</outfile>
									<errTitle>Filius - Error</errTitle>
									<jar>target/filius.jar</jar>
									<icon>src/main/resources/gfx/filius32.ico</icon>
									<classPath>
										<mainClass>filius.Main</mainClass>
										<addDependencies>true</addDependencies>
									</classPath>
									<chdir>.</chdir>
									<jre>
										<minVersion>${execJre.version}</minVersion>
										<jdkPreference>preferJdk</jdkPreference>
									</jre>
									<versionInfo>
										<fileVersion>${project.version}.0</fileVersion>
										<txtFileVersion>txt file version</txtFileVersion>
										<fileDescription>${project.name}</fileDescription>
										<copyright>Stefan Freischlad, Christian Eibl</copyright>
										<productVersion>${project.version}.0</productVersion>
										<txtProductVersion>${project.description}</txtProductVersion>
										<productName>${project.name}</productName>
										<internalName>${project.artifactId}</internalName>
										<originalFilename>${launch4j.starterName}</originalFilename>
									</versionInfo>
								</configuration>
							</execution>
							<execution>
								<id>filius-setup-exe</id>
								<phase>install</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<headerType>gui</headerType>
									<outfile>target/${launch4j.setupStarterName}</outfile>
									<errTitle>Filius Installation - Error</errTitle>
									<jar>target/${project.build.finalName}-setup.jar</jar>
									<icon>src/main/resources/gfx/filius32.ico</icon>
									<chdir>.</chdir>
									<jre>
										<minVersion>${execJre.version}</minVersion>
										<jdkPreference>preferJdk</jdkPreference>
									</jre>
									<versionInfo>
										<fileVersion>${project.version}.0</fileVersion>
										<txtFileVersion>txt file version</txtFileVersion>
										<fileDescription>${project.name}-Setup</fileDescription>
										<copyright>Stefan Freischlad, Christian Eibl</copyright>
										<productVersion>${project.version}.0</productVersion>
										<txtProductVersion>${project.description}</txtProductVersion>
										<productName>${project.name}</productName>
										<internalName>${project.artifactId}</internalName>
										<originalFilename>${launch4j.setupStarterName}</originalFilename>
									</versionInfo>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Prepare Windows Installer Resources -->
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-product-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<excludeArtifactIds>junit,mockito-all,fest-assert</excludeArtifactIds>
									<excludeTransitive>true</excludeTransitive>
									<outputDirectory>${izpack.staging}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>create-staging-area</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy todir="${izpack.staging}">
											<fileset dir="${basedir}/src/izpack" />
										</copy>
										<copy
											file="${project.build.directory}/${project.build.finalName}.jar"
											todir="${izpack.staging}" />
										<copy file="${project.build.directory}/${launch4j.starterName}"
											todir="${izpack.staging}" />
										<copy todir="${izpack.staging}/config">
											<fileset dir="${basedir}/src/main/assembly/config"
												includes="**/*" />
										</copy>
										<copy todir="${izpack.staging}/hilfe">
											<fileset dir="${basedir}/src/main/assembly/hilfe"
												includes="**/*" />
										</copy>
										<copy todir="${izpack.staging}/info">
											<fileset dir="${basedir}/src/main/assembly/info"
												includes="**/*" />
										</copy>
										<copy todir="${izpack.staging}/img">
											<fileset dir="${basedir}/src/main/assembly/img"
												includes="**/*" />
										</copy>
										<copy todir="${izpack.staging}/tmpl">
											<fileset dir="${basedir}/src/main/assembly/tmpl"
												includes="**/*" />
										</copy>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Create a Zip-Archive for Platform Independent Delivery -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<descriptors>
								<descriptor>assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>attached</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Create a Windows Installer -->
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>${izpack.version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
								<configuration>
									<baseDir>${izpack.staging}</baseDir>
									<installFile>${izpack.staging}/install.xml</installFile>
									<installerFile>${project.build.directory}/${project.build.finalName}-setup.jar</installerFile>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<finalName>${project.build.finalName}-setup</finalName>
									<enableAttachArtifact>false</enableAttachArtifact>
									<autoIncludeUrl>true</autoIncludeUrl>
									<autoIncludeDevelopers>true</autoIncludeDevelopers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<build>
				<plugins>

					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<excludeArtifactIds>junit,mockito-all,fest-assert</excludeArtifactIds>
									<excludeTransitive>true</excludeTransitive>
									<outputDirectory>${project.build.directory}/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<configuration>
									<target>
										<gzip destfile="${project.build.directory}/changelog.gz"
											src="${project.basedir}/src/main/assembly/info/Changelog.txt" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Create Debian Package (used for Ubuntu Platform) -->
					<plugin>
						<artifactId>jdeb</artifactId>
						<groupId>org.vafer</groupId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<installDir>/usr/share/filius</installDir>
									<dataSet>
										<data>
											<src>${project.build.directory}/${project.build.finalName}.jar</src>
											<type>file</type>
											<dst>/usr/share/filius/filius.jar</dst>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/scripts/Filius.sh</src>
											<type>file</type>
											<dst>usr/share/filius/filius.sh</dst>
											<mapper>
												<type>perm</type>
												<filemode>755</filemode>
												<user>root</user>
												<group>root</group>
											</mapper>
										</data>
										<data>
											<type>link</type>
											<linkName>/usr/bin/filius</linkName>
											<linkTarget>../share/filius/filius.sh</linkTarget>
											<symlink>true</symlink>
										</data>
										<data>
											<src>${project.basedir}/src/deb/filius.desktop</src>
											<type>file</type>
											<dst>/usr/share/applications/filius.desktop</dst>
										</data>
										<data>
											<src>${project.basedir}/src/deb/filius32.png</src>
											<type>file</type>
											<dst>/usr/share/pixmaps/filius32.png</dst>
										</data>
										<data>
											<src>${project.basedir}/src/deb/copyright</src>
											<type>file</type>
											<dst>/usr/share/doc/filius/copyright</dst>
										</data>
										<data>
											<src>${project.build.directory}/changelog.gz</src>
											<type>file</type>
											<dst>/usr/share/doc/filius/changelog.gz</dst>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/info</src>
											<type>directory</type>
											<excludes>.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/config</src>
											<type>directory</type>
											<excludes>.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/config</prefix>
											</mapper>
										</data>
										<data>
											<type>link</type>
											<linkName>/etc/filius</linkName>
											<linkTarget>/usr/share/filius/config</linkTarget>
											<symlink>true</symlink>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/tmpl</src>
											<type>directory</type>
											<excludes>**/.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/tmpl</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/tmpl/quelltext_vorlagen</src>
											<type>directory</type>
											<excludes>**/.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/tmpl/quelltext_vorlagen</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/img</src>
											<type>directory</type>
											<excludes>**/.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/img</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/hilfe</src>
											<type>directory</type>
											<excludes>**/.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/hilfe</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.basedir}/src/main/assembly/hilfe/gfx</src>
											<type>directory</type>
											<excludes>**/.svn</excludes>
											<includes>*.*</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/hilfe/gfx</prefix>
											</mapper>
										</data>
										<data>
											<src>${project.build.directory}/lib</src>
											<type>directory</type>
											<includes>*.jar</includes>
											<mapper>
												<type>perm</type>
												<strip>1</strip>
												<prefix>/usr/share/filius/lib</prefix>
											</mapper>
										</data>
									</dataSet>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>